labda $endfor
	$startloop
	dup
	jmpz $endloop
	call
	jmp $startloop
	$endloop
	drop
	return
$endfor
set_global 3
labda $endwhile
	set_local 0
	set_local 1
	$startloop2
	push_word 0
	jmpz $endloop2
	push_word 1
	jmp $startloop2
	$endloop2
	return
$endwhile
set_global 4
labda $endcompose
	set_local 0
	set_local 1
	labda $endcomposed
		push_word 1
		push_word 0
	$endcomposed
	return
$endcompose
set_global 5
labda $endover3
	set_local 0
	set_local 1
	set_local 5
	get 5
	get 1
	get 0
	get 5
	return
$endover3
set_global 6
new_dict
set_local 0
labda $endimport
	set_local 1
	push_word 1
	push_word 0
	has_dict
	push_word 7
	jmpz $already
		push_word 1
		push_word 8
		push_word 1
		push_word 0
		set_dict
	$already
	push_word 1
	push_word 0
	get_dict
	push_word 1
	push_word 9
	return
$endimport
set_global 10
labda $endlist
	new_list
	set_local 0
	$startloop3
	dup
	jmpz $endloop3
		rot
		get 0
		push_to
		call
		jmp $startloop3
	$endloop3
	drop
	push_word 0
	return
$endlist
set_global 11
labda $endonce
	push_word 12
	get 35
	return
$endonce
set_global 13
labda $endwrite
	swap
	set_local 0
	push_literal 14
	push_literal 15
	get 16
	get_dict
	call
	set_local 1
	push_word 0
	get 0
	push_word 17
	push_literal 18
	jmpne $isiter
		push_word 13
	$isiter
	enter_errhand $write-try
		get 1
		push_literal 19
		get 16
		get_dict
		call
		reraise
	$write-try
		$start-write-for
		dup
		jmpz $end-write-for
		set_local 3
		set_local 4
			get 1
			push_literal 20
			get 16
			get_dict
			call
		push_word 4
		push_word 3
		jmp $start-write-for
		$end-write-for
		drop
	leave_errhand
	get 1
	push_literal 19
	get 16
	get_dict
	call
	return
$endwrite
push_literal 14
get 16
set_dict
labda $endreplace
	push_word 21
	swap
	push_word 22
	return
$endreplace
set_global 23
labda $endsort
    push_word 12
    push_word 24
    return
$endsort
set_global 25
labda $endsort-by
    set_local 27
    dup
    push_word 28
    dup
    push_word 30
    push_word 29
    set_local 0
    $start-sort-by-repeat
    push_word 0
    jmpz $end-sort-by-repeat
        push_word 0
        over
        get_dict
        push_word 27
        dup
        push_word 17
        push_literal 31
        jmpeq $no-number
            push_literal 32
            push_literal 33
            push_word 34
        $no-number
        over
        push_word 0
        swap
        set_dict
    push_word 0
    push_word 29
    set_local 0
    jmp $start-sort-by-repeat
    $end-sort-by-repeat
    push_word 24
    return
$endsort-by
set_global 26
push_integer 1
push_word 36
set_local 37
push_integer 32
push_integer 0
push_word 37
set_dict
push_integer 1
push_word 36
set_local 38
push_integer 10
push_integer 0
push_word 38
set_dict
labda $endecho
	push_literal 39
	push_literal 20
	push_word 16
	get_dict
	call
	return
$endecho
set_local 40
labda $end!print\
	push_word 41
	push_literal 42
	push_literal 43
	push_word 16
	get_dict
	call
	push_word 40
	return
$end!print\
push_literal 44
push_word 16
set_dict
labda $end!print
	push_literal 44
	push_word 16
	get_dict
	call
	push_word 38
	push_word 40
	return
$end!print
push_literal 47
push_word 16
set_dict
labda $end!print\(
	$startwhile!print\(
	dup
	push_literal 48
		jmpeq $endwhile!print\(
		push_literal 44
		push_word 16
		get_dict
		call
	jmp $startwhile!print\(
	$endwhile!print\(
	drop
	return
$end!print\(
push_literal 45
push_word 16
set_dict
labda $end!print(
	push_literal 45
	push_word 16
	get_dict
	call
	push_word 38
	push_word 40
	return
$end!print(
push_literal 46
push_word 16
set_dict
labda $end!.\
	push_literal 49
	push_literal 43
	push_word 16
	get_dict
	call
	push_word 40
	return
$end!.\
push_literal 51
push_word 16
set_dict
labda $end!.
	push_literal 51
	push_word 16
	get_dict
	call
	push_word 38
	push_word 40
	return
$end!.
push_literal 53
push_word 16
set_dict
labda $end!.\(
	dup
	push_literal 48
	jmpeq $endwhile!.\(
		$startwhile!.\(
		push_literal 51
		push_word 16
		get_dict
		call
		dup
		push_literal 48
		jmpeq $endwhile!.\(
		push_word 37
		push_word 40
		jmp $startwhile!.\(
	$endwhile!.\(
	drop
	return
$end!.\(
push_literal 50
push_word 16
set_dict
labda $end!.(
	push_literal 50
	push_word 16
	get_dict
	call
	push_word 38
	push_word 40
	return
$end!.(
push_literal 52
push_word 16
set_dict
labda $endmap
	set_local 5
	push_literal 55
	swap
	push_word 57
	$startformap
	dup
	jmpz $endformap
		set_local 0
		set_local 1
		push_word 5
		get 1
		push_word 0
	jmp $startformap
	$endformap
	drop
	push_word 56
	return
$endmap
set_global 54
return
...
ia
ib
icall
ifor
iwhile
i$
iover-3
inot
iuse
isetglobal
iimport
ilist
ifalse
ionce
iwrite
iopen
ieva
itype
iblob
iclose
iwrite-fragment
isplit
ijoin
ireplace
i(sort)
isort
isort-by
ikey
icopy
i--
ilen
inum
sssorting keys must return numbers for now
itype-error
iRaise
ipass
imake-blob
ispace
inewline
istdout
iecho
ito-str
iutf-8
iencode
iprint\
iprint\(
iprint(
iprint
i)
iquoted
i.\(
i.\
i.(
i.
imap
i]
i[
iin
